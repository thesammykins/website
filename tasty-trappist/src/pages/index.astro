---
// Modern 80s portfolio homepage for Samantha Myers - Updated for geometric design, readability, social/role tags, and styled About Me highlights
import Header from '../components/Header.astro';
import Section from '../components/Section.astro';
import Card from '../components/Card.svelte';
import MemphisBackground from '../components/MemphisBackground.svelte';
import Tag from '../components/Tag.svelte';
import ThemeToggle from '../components/ThemeToggle.svelte';
import '../styles/global.css';
---
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Samantha Myers – 'bout me</title>

	<!-- Updated Favicon Links -->
	<link rel="apple-touch-icon" sizes="180x180" href="/favicon_io/apple-touch-icon.png">
	<link rel="icon" type="image/png" sizes="32x32" href="/favicon_io/favicon-32x32.png">
	<link rel="icon" type="image/png" sizes="16x16" href="/favicon_io/favicon-16x16.png">
	<link rel="manifest" href="/favicon_io/site.webmanifest">
	<link rel="icon" type="image/x-icon" href="/favicon_io/favicon.ico"> {/* Fallback an older browsers */}

	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&family=Fira+Mono:wght@400;700&family=Orbitron:wght@700&display=swap" rel="stylesheet">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
	<style>
		/* CSS Variables and global body, h1, h2, h3, p, ul, .container styles moved to src/styles/global.css */
    /* Kept page-specific styles below */

    body::before {
			content: '';
			position: fixed;
			z-index: 0;
			top: -100px; left: -100px; width: 400px; height: 400px;
			background: radial-gradient(circle, #ff5af7 60%, transparent 100%);
			opacity: 0.5;
			filter: blur(20px);
			pointer-events: none;
		}
		body::after {
			content: '';
			position: fixed;
			z-index: 0;
			bottom: -120px; right: -120px; width: 350px; height: 350px;
			background: radial-gradient(circle, #00eaff 60%, transparent 100%);
			opacity: 0.5;
			filter: blur(20px);
			pointer-events: none;
		}
    .container {
      /* fadeIn animation is specific to index.astro */
      animation: fadeIn 1s cubic-bezier(.4,0,.2,1);
    }
		.headline {
			flex: 1;
			min-width: 220px;
		}
		.role {
			font-family: 'Orbitron', 'Inter', sans-serif; /* Era-appropriate font */
			font-size: 1.15rem;
			font-weight: 700; /* Ensure consistency with imported Orbitron weight */
			color: var(--primary);
			margin-bottom: 0.3em;
			text-shadow: 1px 1px 0 var(--yellow);
			letter-spacing: 0.05em;
		}
		.location {
			font-family: 'Orbitron', 'Inter', sans-serif; /* Era-appropriate font */
			font-size: 1.05rem;
			font-weight: 700; /* Ensure consistency with imported Orbitron weight */
			color: var(--cyan);
			margin-bottom: 0.4em;
			letter-spacing: 0.05em;
		}
		.section {
			/* Styles like margin-bottom, position, z-index, and border are now in Section.astro */
      /* section animations are specific to index.astro */
			animation: slideIn 0.8s cubic-bezier(.4,0,.2,1);
			animation-fill-mode: both;
		}
		.section:nth-child(2) { animation-delay: 0.1s; }
		.section:nth-child(3) { animation-delay: 0.2s; }
		.section:nth-child(4) { animation-delay: 0.3s; }
		.section:nth-child(5) { animation-delay: 0.4s; }
		.section:nth-child(6) { animation-delay: 0.5s; }
		.card-list {
			display: grid;
			grid-template-columns: 1fr 1fr 1fr;
			gap: 2rem 1.5rem;
			margin-bottom: 1.5rem;
		}
		@media (max-width: 1200px) {
			.card-list {
				grid-template-columns: 1fr 1fr;
			}
		}
		@media (max-width: 700px) {
			.card-list {
				grid-template-columns: 1fr;
				gap: 1.2rem;
			}
			/* .container padding/margin adjustments for mobile are page-specific */
      .container {
        padding: 1.2rem 0.5rem;
				margin: 2.5rem 0 1.5rem 0;
      }
		}
		.card {
			background: var(--card);
			border-radius: 4px; /* Made more geometric */
			box-shadow: 0 2px 12px rgba(59,130,246,0.07);
			padding: 1.2rem 1.1rem 1.1rem 1.1rem;
			margin-bottom: 0.5rem;
			transition: box-shadow 0.2s;
			border: 1.5px solid #e0e7ef;
			position: relative;
			overflow: hidden;
		}
		.card:hover {
			box-shadow: 0 6px 32px rgba(59,130,246,0.13);
			border-color: var(--primary);
		}
		.job-title {
			font-weight: 700;
			font-size: 1.08rem;
			color: var(--accent);
		}
		.job-meta {
			font-size: 0.97rem;
			color: #6b7280;
			margin-bottom: 0.5em;
		}
		.skills, .interests {
			display: flex;
			flex-wrap: wrap;
			gap: 1.2rem 1.5rem; /* Increased gap for better spacing */
			margin-top: 0.5em;
		}
		.tag {
			background: var(--tag-bg);
			border-radius: 2px; /* Made more geometric */
			padding: 0.35rem 0.8rem;
			font-size: 1rem;
			font-family: 'Fira Mono', monospace;
			color: var(--tag-color);
			font-weight: 700;
			letter-spacing: 0.01em;
			/* margin-bottom: 0.3em; */ /* Rely on parent gap */
			/* margin-right: 0.5em; */ /* Rely on parent gap */
			transition: background 0.2s, color 0.2s;
			box-shadow: 1px 1px 0 #ff5af7;
			white-space: pre-line;
			word-break: break-word;
		}
		.tag:hover {
			background: #ff5af7;
			color: #fff200;
		}
		@keyframes fadeIn {
			from { opacity: 0; }
			to { opacity: 1; }
		}
		@keyframes slideIn {
			from { transform: translateY(24px); opacity: 0; }
			to { transform: translateY(0); opacity: 1; }
		}
		.contact-roles {
			margin-bottom: 0.7em;
		}
		.contact-roles strong {
			color: var(--primary);
			font-weight: 700;
			text-shadow: 1px 1px 0 #fff200;
		}
		.contact-icons {
			display: flex;
			gap: 1.2em;
			margin-top: 0.7em;
		}
		.contact-icons a {
			color: var(--accent);
			font-size: 1.7em;
			transition: color 0.2s;
		}
		.contact-icons a:hover {
			color: var(--yellow);
		}

		/* Styling for the roles I'm open to, to match .tag */
		.open-roles-list {
			display: flex;
			flex-wrap: wrap;
			gap: 0.8rem 1rem; /* Consistent with .skills and .interests */
			margin-top: 0.5em; /* Consistent with .skills and .interests */
		}

		.role-tag {
			background: var(--tag-bg);
			border-radius: 2px;
			padding: 0.35rem 0.8rem;
			font-size: 1rem;
			font-family: 'Fira Mono', monospace;
			color: var(--tag-color);
			font-weight: 700;
			letter-spacing: 0.01em;
			transition: transform 0.18s, background 0.18s, color 0.18s, box-shadow 0.18s;
			box-shadow: 1px 1px 0 #ff5af7;
			white-space: pre-line;
			word-break: break-word;
		}

		.role-tag:hover {
			background: #ff5af7;
			color: #fff200;
			transform: scale(1.08) rotate(-2deg);
			box-shadow: 4px 4px 0 #00eaff;
		}

		/* Styling for highlighted phrases in About Me, to match .tag */
		.about-me-tagline {
			font-size: 1.2em; /* Make tagline a bit more prominent */
			font-weight: 600;
			color: var(--heading);
			margin-bottom: 1em;
			line-height: 1.5;
		}

		.about-me-points {
			display: flex;
			flex-wrap: wrap;
			gap: 0.8rem 1rem; /* Consistent with .skills and .interests */
			margin-bottom: 1em;
		}

		.about-me-point-tag {
			background: var(--tag-bg);
			border-radius: 2px;
			padding: 0.35rem 0.8rem;
			font-size: 1rem; /* Standard tag size */
			font-family: 'Fira Mono', monospace;
			color: var(--tag-color);
			font-weight: 700;
			letter-spacing: 0.01em;
			box-shadow: 1px 1px 0 #ff5af7;
			transition: transform 0.18s, background 0.18s, color 0.18s, box-shadow 0.18s;
		}

		.about-me-point-tag:hover {
			background: #ff5af7;
			color: #fff200;
			transform: scale(1.08) rotate(-2deg);
			box-shadow: 4px 4px 0 #00eaff;
		}

		.about-me-narrative {
			font-size: 1em;
			line-height: 1.6;
			color: var(--text);
		}

		.about-me-highlight {
			display: inline-block; 
			background: var(--tag-bg); /* Default highlight same as tags */
			border-radius: 2px;
			padding: 0.1em 0.5em 0.15em; 
			font-size: 0.98em; /* Slightly adjust to flow with narrative/tagline text */
			font-family: 'Fira Mono', monospace;
			color: var(--tag-color);
			font-weight: 700;
			letter-spacing: 0.01em;
			box-shadow: 1px 1px 0 var(--accent); /* Different shadow for variety */
			line-height: 1.3;
			margin: 0 0.1em;
			/* Make it pop a bit more than plain text */
			transform: translateY(-1px); /* Slight lift */
		}

		.about-me-highlight.strong {
			/* For more prominent highlights, e.g., in the tagline */
			background: var(--primary); /* Use primary color for stronger emphasis */
			color: var(--yellow); /* Contrasting text for primary bg */
			padding: 0.15em 0.6em 0.2em;
			font-size: 1.05em; /* Slightly larger for tagline */
			box-shadow: 1px 1px 0 var(--accent); /* Different shadow for variety */
			transition: transform 0.18s, background 0.18s, color 0.18s, box-shadow 0.18s;
		}

		.about-me-highlight.strong:hover {
			background: #ff5af7; /* pink, like tag hover */
			color: #fff200;    /* yellow, like tag hover */
			transform: scale(1.2) rotate(3deg);
			box-shadow: 4px 4px 0 #00eaff; /* cyan, like tag hover */
		}

		/* Add this for the dev link */
		.dev-link {
			position: fixed;
			top: 24px; /* Align with ThemeToggle */
			right: 100px; /* Space it out from ThemeToggle */
			z-index: 201; /* Above ThemeToggle\'s z-index (200) */
			background: var(--yellow);
			color: var(--heading);
			padding: 0.3rem 0.6rem;
			border-radius: 3px;
			font-family: 'Fira Mono', monospace;
			font-size: 0.8rem;
			text-decoration: none;
			box-shadow: 1px 1px 0 var(--primary);
			opacity: 0.8;
			transition: opacity 0.2s;
		}
		.dev-link:hover {
			opacity: 1;
		}
		/* End of dev link style */
	</style>
</head>
<body>
	<ThemeToggle client:load />
	<MemphisBackground client:load />
	<div class="container">
		<Header 
			avatarImagePath="/avatar.png"
			name="Samantha Myers"
			role="Corporate Engineering Manager @ <a class='ferocia-link' href='https://ferocia.com.au/' target='_blank' rel='noopener noreferrer'>Ferocia</a>"
			location="Melbourne, Australia"
			socials={[
				{ href: 'https://www.linkedin.com/in/sammyers12/', text: 'LinkedIn' },
				{ href: 'mailto:me+website@samanthamyers.au', text: 'Email' },
				{ href: 'https://blog.sammykins.au', text: 'Blog' }
			]}
		/>
		<Section title="About Me" icon="▲" animationDelay="0.1s">
			<div class="about-me-content">
				<p class="about-me-tagline">
					Dialed into the digital frontier: I'm your <span class="about-me-highlight strong">Radical Innovator</span> & <span class="about-me-highlight strong">Lightning Learner</span>.
				</p>
				<div class="about-me-points">
					<span class="about-me-point-tag">User-First Systems that Groove</span>
					<span class="about-me-point-tag">Chaos Tamer Extraordinaire</span>
					<span class="about-me-point-tag">Elegant Solution Engineer</span>
					<span class="about-me-point-tag">Team Synergy Catalyst</span>
					<span class="about-me-point-tag">Master of Glitch-Free Operations</span>
				</div>
				<p class="about-me-narrative">
					With over a decade in the IT game, I thrive on making tech not just work, but work *for people*. I'm all about smoothing out the complexities and engineering systems that are intuitive and effective. Ready for full-time, permanent gigs (8am–6pm) where I can help untangle chaos and build some totally <span class="about-me-highlight">Tubular Tech</span>!
				</p>
			</div>
		</Section>
		<Section title="Experience" icon="■" animationDelay="0.2s">
			<div class="card-list">
				<Card title="Corporate Engineering Manager – <a class='company-link-discreet' href='https://ferocia.com.au/' target='_blank' rel='noopener noreferrer'>Ferocia</a>" meta="Nov 2024 – Present | Melbourne (Hybrid)">
					<ul><li>Lead projects and strategy while keeping tech and people aligned.</li></ul>
				</Card>
				<Card title="Technical Support Engineer – <a class='company-link-discreet' href='https://ferocia.com.au/' target='_blank' rel='noopener noreferrer'>Ferocia</a>" meta="Jan 2023 – Nov 2024">
					<ul><li>Managed IT infrastructure and support. Door whisperer. Network fixer.</li></ul>
				</Card>
				<Card title="Service Desk Lead – <a class='company-link-discreet' href='https://www.redbubble.com/' target='_blank' rel='noopener noreferrer'>Redbubble</a>" meta="Jun 2022 – Dec 2022 | Melbourne">
					<ul><li>Led a team of 3. 1:1s, team syncs, collaboration, and process tweaks.</li></ul>
				</Card>
				<Card title="IT Support Technician – <a class='company-link-discreet' href='https://www.redbubble.com/' target='_blank' rel='noopener noreferrer'>Redbubble</a>" meta="May 2021 – Jun 2022">
					<ul><li>Managed onboarding and support tooling. Made inductions memorable.</li></ul>
				</Card>
				<Card title="Service Desk Agent – <a class='company-link-discreet' href='https://kineo.com/' target='_blank' rel='noopener noreferrer'>Kineo</a>" meta="May 2019 – May 2021 | Adelaide">
					<ul><li>Supported Totara, SCORM, and client triage. Developer interpreter.</li></ul>
				</Card>
				<Card title="At Home Advisor – <a class='company-link-discreet' href='https://www.apple.com/' target='_blank' rel='noopener noreferrer'>Apple</a>" meta="Apr 2017 – Feb 2018">
					<ul><li>iOS/macOS support. Bug reports, escalations, fraud handling.</li></ul>
				</Card>
			</div>
		</Section>
		<Section title="Education & Certifications" icon="●" animationDelay="0.3s">
			<div class="card-list">
				<Card title="Trinity College, Gawler">
					<span>Grade 11 (2007–2010)</span>
				</Card>
				<Card title="<a class='company-link-discreet' href='https://www.jamf.com/' target='_blank' rel='noopener noreferrer'>Jamf</a> Certified Tech">
					<span>Issued Jun 2022 (ID: 202407-82259)</span>
				</Card>
			</div>
		</Section>
		<Section title="Skills" icon="+" animationDelay="0.4s">
			<div class="skills">
				<Tag>Team & Ops Management</Tag>
				<Tag>IT Support (Mac/Windows/Cloud)</Tag>
				<Tag><a class='company-link-discreet' href='https://www.jamf.com/' target='_blank' rel='noopener noreferrer'>Jamf</a></Tag>
				<Tag><a class='company-link-discreet' href='https://www.okta.com/' target='_blank' rel='noopener noreferrer'>Okta</a></Tag>
				<Tag>Google Workspace</Tag>
				<Tag>Jira</Tag>
				<Tag>Device Fleet Management</Tag>
				<Tag>Service Delivery</Tag>
				<Tag>Translating Dev to Human</Tag>
			</div>
		</Section>
		<Section title="Interests" icon="○" animationDelay="0.5s"> {/* Using a different circle for variety */}
			<div class="interests">
				<Tag>Systems that work for people</Tag>
				<Tag>Mario Kart</Tag>
				<Tag>Tech communities & mentorship</Tag>
			</div>
		</Section>
		<Section title="Contact" icon="□" animationDelay="0.6s"> {/* Using a square outline */}
			<p>Open to roles like:</p> {/* Changed from div to p for the introductory text */}
			<div class="open-roles-list">
				<span class="role-tag">Desktop Support Specialist</span>
				<span class="role-tag">Service Desk Lead</span>
				<span class="role-tag">Help Desk Lead</span>
				<span class="role-tag">Corporate Engineering Manager</span>
				<span class="role-tag">Lead Technical Support Engineer</span>
			</div>
		</Section>
	</div>

	<script>
		document.addEventListener('DOMContentLoaded', () => {
			const avatarContainer = document.getElementById('bouncing-avatar-container');
			if (!avatarContainer) return;

			const IDLE_TIMEOUT = 30000; // User updated: 10 seconds
			const SCALE_FACTOR = 2.5;     // User updated: Scale up 3x
			const IMAGE_OPACITY_WHEN_BOUNCING = '0.7';

			let idleTimer = null;
			let animationFrameId = null;
			let isBouncing = false;

			const borderColorVars = ['--primary', '--accent', '--yellow', '--pink', '--cyan'];
			let avatarUseElement = null;      // For the border
			let avatarImageElement = null;    // For the PNG image
			let tintBackgroundCircle = null; // For the color tint circle in SVG
			const TINT_CIRCLE_ID = 'tint-bg-circle';

			const originalStyle = {
				position: avatarContainer.style.position,
				top: avatarContainer.style.top,
				left: avatarContainer.style.left,
				transform: avatarContainer.style.transform,
				transformOrigin: avatarContainer.style.transformOrigin,
				zIndex: avatarContainer.style.zIndex,
				width: avatarContainer.style.width,
                height: avatarContainer.style.height,
				// No longer using avatarContainer background color
			};
			const originalParent = avatarContainer.parentNode;
			const originalNextSibling = avatarContainer.nextSibling;
			let originalStrokeColor = '';
			let originalImageOpacity = '';

			const initialAvatarWidth = avatarContainer.offsetWidth;
			const initialAvatarHeight = avatarContainer.offsetHeight;
			let posX, posY, speedX, speedY;
			let currentAppliedColor = ''; // Store the last applied color value

			function getRandomCssColor(colorToAvoid) {
				let newColorName;
				let newColorValue;
				let attempts = 0;
				const maxAttempts = borderColorVars.length > 1 ? borderColorVars.length * 2 : 1;

				do {
					newColorName = borderColorVars[Math.floor(Math.random() * borderColorVars.length)];
					newColorValue = getComputedStyle(document.documentElement).getPropertyValue(newColorName.trim()).trim();
					attempts++;
				} while (newColorValue === colorToAvoid && attempts < maxAttempts && borderColorVars.length > 1);
				currentAppliedColor = newColorValue;
				return newColorValue;
			}

			function resetIdleTimer() {
				if (isBouncing) return;
				clearTimeout(idleTimer);
				idleTimer = setTimeout(startBouncing, IDLE_TIMEOUT);
			}

			function startBouncing() {
				if (isBouncing || !avatarContainer) return;
				isBouncing = true;

				const svgElement = avatarContainer.querySelector('svg.avatar-svg');
				avatarUseElement = svgElement ? svgElement.querySelector('use') : null;
				avatarImageElement = svgElement ? svgElement.querySelector('image') : null;

				if (avatarUseElement) originalStrokeColor = avatarUseElement.getAttribute('stroke');
				if (avatarImageElement) originalImageOpacity = avatarImageElement.style.opacity;

				// Create and insert tint background circle if it doesn't exist
				if (svgElement && !tintBackgroundCircle) {
					tintBackgroundCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
					tintBackgroundCircle.setAttribute('id', TINT_CIRCLE_ID);
					tintBackgroundCircle.setAttribute('cx', '50');
					tintBackgroundCircle.setAttribute('cy', '50');
					tintBackgroundCircle.setAttribute('r', '50'); 
					// Insert before the image element for layering
					if (avatarImageElement) {
						svgElement.insertBefore(tintBackgroundCircle, avatarImageElement);
					} else if (avatarUseElement) { // Fallback if image not found but use is
                        svgElement.insertBefore(tintBackgroundCircle, avatarUseElement);
                    } else {
                        svgElement.appendChild(tintBackgroundCircle); // Last resort
                    }
				}

                document.body.appendChild(avatarContainer);
				avatarContainer.style.position = 'fixed';
				avatarContainer.style.zIndex = '9999';
                avatarContainer.style.width = originalStyle.width || `${initialAvatarWidth}px`;
                avatarContainer.style.height = originalStyle.height || `${initialAvatarHeight}px`;
				avatarContainer.style.transformOrigin = '0 0';
				avatarContainer.style.transform = `scale(${SCALE_FACTOR})`;
				
				const newColor = getRandomCssColor(null); // Get initial color
				if (tintBackgroundCircle) tintBackgroundCircle.setAttribute('fill', newColor);
				if (avatarImageElement) avatarImageElement.style.opacity = IMAGE_OPACITY_WHEN_BOUNCING;
				if (avatarUseElement) avatarUseElement.setAttribute('stroke', newColor);

				posX = Math.random() * (window.innerWidth - (initialAvatarWidth * SCALE_FACTOR));
				posY = Math.random() * (window.innerHeight - (initialAvatarHeight * SCALE_FACTOR));

				const angle = Math.random() * Math.PI * 2;
                const baseSpeed = 2;
				speedX = Math.cos(angle) * baseSpeed;
				speedY = Math.sin(angle) * baseSpeed;

				animationFrameId = requestAnimationFrame(animateBounce);
			}

			function animateBounce() {
				if (!isBouncing || !avatarContainer) return;

				posX += speedX;
				posY += speedY;

				const currentAvatarWidth = initialAvatarWidth * SCALE_FACTOR;
				const currentAvatarHeight = initialAvatarHeight * SCALE_FACTOR;

				let bounced = false;
				if (posX + currentAvatarWidth >= window.innerWidth || posX <= 0) {
					speedX *= -1;
					posX = Math.max(0, Math.min(posX, window.innerWidth - currentAvatarWidth));
					bounced = true;
				}
				if (posY + currentAvatarHeight >= window.innerHeight || posY <= 0) {
					speedY *= -1;
					posY = Math.max(0, Math.min(posY, window.innerHeight - currentAvatarHeight));
					bounced = true;
				}

				if (bounced) {
					const newColor = getRandomCssColor(currentAppliedColor);
					if (tintBackgroundCircle) tintBackgroundCircle.setAttribute('fill', newColor);
					if (avatarUseElement) avatarUseElement.setAttribute('stroke', newColor);
				}

				avatarContainer.style.left = `${posX}px`;
				avatarContainer.style.top = `${posY}px`;

				animationFrameId = requestAnimationFrame(animateBounce);
			}

			function stopBouncing_forPotentialFutureUse() { 
				if (!isBouncing || !avatarContainer) return;
				cancelAnimationFrame(animationFrameId);
				isBouncing = false;

				avatarContainer.style.position = originalStyle.position;
				avatarContainer.style.top = originalStyle.top;
				avatarContainer.style.left = originalStyle.left;
				avatarContainer.style.transform = originalStyle.transform;
				avatarContainer.style.transformOrigin = originalStyle.transformOrigin;
				avatarContainer.style.zIndex = originalStyle.zIndex;
                avatarContainer.style.width = originalStyle.width;
                avatarContainer.style.height = originalStyle.height;

				if (tintBackgroundCircle && tintBackgroundCircle.parentNode) {
					tintBackgroundCircle.parentNode.removeChild(tintBackgroundCircle);
					tintBackgroundCircle = null; // Clear reference
				}
				if (avatarUseElement && originalStrokeColor) {
					avatarUseElement.setAttribute('stroke', originalStrokeColor);
				}
				if (avatarImageElement && originalImageOpacity) {
					avatarImageElement.style.opacity = originalImageOpacity;
				}

                if (originalParent) {
                    if (originalNextSibling) {
                        originalParent.insertBefore(avatarContainer, originalNextSibling);
                    } else {
                        originalParent.appendChild(avatarContainer);
                    }
                } else { 
                    document.body.insertBefore(avatarContainer, document.body.firstChild);
                }
			}

			['mousemove', 'mousedown', 'keypress', 'scroll', 'touchstart'].forEach(event => {
				window.addEventListener(event, resetIdleTimer, { passive: true });
			});

			resetIdleTimer();
		});
	</script>
</body>
</html>
